#!/usr/bin/env ruby

require 'thor'
require_relative '../commands/structure'
require_relative '../commands/dump_sql'
require_relative '../commands/template'

$pwd = Dir.pwd

current_dir = __dir__

Dir.chdir(File.join(current_dir, '../'))

class Structure < Thor
  include StructureCommand
  desc 'new NAME, PROJECT_NAME', 'Create a directory strucutre under a certain project name'
  def new(name, project_name)
    create(name, project_name, $pwd)
  end
  desc 'list', 'List all available structures'
  def list
    list_structures
  end
end

class Template < Thor
  include TemplateCommand
  desc 'new NAME, FILE_NAME, ARGS..', 'Create a directory strucutre under a certain project name'
  def new(name, file_name, *args)
    create_template(args, name, file_name, $pwd)
  end
  desc 'list', 'List all available structures'
  def list
    list_templates
  end
end

class DumpSql < Thor
  include DumpSqlCommand
  desc 'dump FILE, MODULE_NAME, OUT_FILE', 'Get a sql file and dump it into another langauge orm class'
  def dump(file, module_name, out_file = nil)
    dump_command(file, module_name, out_file, $pwd)
  end
end

class BopGun < Thor
  desc 'bopgun structure', 'create a project structure'
  subcommand 'structure', Structure

  desc 'bopgun dumpsql', 'dump sql file'
  subcommand 'dumpsql', DumpSql

  desc 'bopgun template', 'create new file from template'
  subcommand 'template', Template

  def self.exit_on_failure?
    true
  end
end

BopGun.start
